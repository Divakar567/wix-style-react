@import '../common.scss';
@import '../Input/InputMixins.scss';
@import '../typography-helpers.scss';

$gap: 0;
$double-gap: 12px;
$errorColor: #f2564d;
$statusColor: #7a92a5;
$disabledColor: #cbd3dc;

.root {
  position: relative;
  display: flex;
  align-items: center;
  border: solid 1px;
  border-radius: 6px;
  @include BoxSizing();
  @include FontRoman();
}

.input-wrapper {
  display: flex;
  width: 100%;
  padding: 0 $gap;
}

.size-large {
  .input-wrapper {
    padding: 0 $double-gap;
  }
}

.input {
  flex-grow: 1;
  flex-shrink: 1;
  min-width: 24px;
  padding: 0 $gap;
  margin: 0;
  border: 0;
  outline: 0;
  line-height: 1.5;
  background: transparent;
  @include BorderRadius(6px);
  @include FontRoman();
  @include Placeholder(getTextColor($light: true, $secondary: true));
  @include Selection($paletteB4);

  &[type=number] {
    -moz-appearance:textfield;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }

}

// Remove IE10+ automatically x button
.input::-ms-clear {
  display: none;
}

// remove safari autofill icon
.input::-webkit-contacts-auto-fill-button {
  display: none !important;
}

.suffixes {
  display: flex;
  align-items: center;
  flex-shrink: 0;
  flex-grow: 0;
  min-width: 0;
  user-select: none !important;
  height: 100%;
}

.suffix {
  height: 100%;
  display: flex;
  align-items: center;

  &:last-child .unit { padding-right: $double-gap; }
}

.size {
  &-small  { @include Size($height: 30px, $fontSize: 14px); }
  &-small-with-selection { @include Size($height: 28px, $fontSize: 14px); }
  &-normal { @include Size($height: 36px, $fontSize: 16px); }
  &-normal-with-selection { @include Size($height: 34px, $fontSize: 16px); }
  &-large  { @include Size($height: 60px, $fontSize: 16px); }
  &-large-with-selection { @include Size($height: 58px, $fontSize: 16px); }
}

.theme-amaterial {
  border: 0;

  .errorIcon {
    padding: 0 6px 16px;
    color: $errorColor;
  }

  .errorMessage {
    color: $errorColor;
  }

  .statusMessage {
    position: absolute;
    left: 0;
    bottom: -15px;
    font-size: 12px;
    font-weight: 500;
    font-style: normal;
    font-stretch: normal;
    line-height: 1.25;
    letter-spacing: normal;
    color: $statusColor;
  }

  label {
    font-size: 20px;
    transition:all .2s ease-in-out;
    position: absolute;
    top: 2px;
    padding: 0;
    color: $statusColor;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }

  .input {
    @include FontLight();
    opacity: 0;
    z-index: 1;
    transition: border-bottom .3s, border-color .3s, border-width .3s, border .3s, opacity 0s ease-in-out;
    line-height: 1;
    display: block;
    margin-top: 0px;
    background: none;
    border-radius: 0;
    border-style: solid; // Firefox fix

    // Fix number inputs in Firefox to be full-width
    width: 100%;
    box-sizing: border-box;
    color: #162d3d;
  }

  &.size-normal {
    padding-bottom: 4px;
    @include Size($height: 34px, $fontSize: 20px);
  }

  &.hasFocus,
  &.hasValue {
    .input {
      @include Placeholder($paletteE6);
      transition: opacity 0.3s ease-in-out;
      opacity: 1;
    }
    input {
      border-bottom: 0;
    }

    .bar {
      &:before, &:after {
        height: 1px;
        // background-color: $B10;
        background-color: #3899ec;
      }
    }
    label {
      top: -22px;
      font-size: 12px;
    }
  }

  .bar {
    position: absolute;
    bottom: 0;
    left: -1px;
    right: -1px;
    height: 1px;
    background: transparent;
    &:before, &:after {
      content: '';
      height: 1px;
      width: 0;
      bottom: 0;
      position: absolute;
      background: transparent;
      transition: 0.3s all;
    }
    transition: 0.3s ease all;
  }
  @at-root {
    .hasFocus .barBlue:before,
    .hasFocus .barBlue:after {
      width:100%;
    }
    &.disabled {
      label, .input {
        color: $disabledColor;
      }
    }
  }
  

  &:hover:not(.disabled) {
    .bar, .input:hover ~ .barBlue, .input.hasHover ~ .barBlue {
      transition: 0.3s ease all;
      background: $D60;
    }
  }

  &.hasError {
    .bar, .input:hover ~ .barBlue, .input.hasHover ~ .barBlue {
      background: $errorColor;
    }

    &:hover:not(.disabled) {
      .bar, .input:hover ~ .barBlue, .input.hasHover ~ .barBlue {
        background: $errorColor;
      }
    }
    
    &.hasFocus {
      .bar {
        &:before, &:after {
          background: $errorColor;
        }
      }
    }
  }
}

// RTL layout based on global style set on document body or parent element.
@include withRTL() {
  .root,
  .input-wrapper,
  .suffixes { direction: rtl; }
  .input {
    direction: rtl;

    &.withPrefix { padding-right: 0; padding-left: $double-gap; }
    &.withSuffix { padding-left: 0; padding-right: $double-gap; }
  }

  .prefix,
  .suffix {
    &:last-child .unit { padding-left: $double-gap; padding-right: $gap; }
  }
}

// RTL layout based on a property passed directly to the component.
.rtl.root {
  direction: rtl;
  .suffixes { direction: rtl; }
  .input { direction: rtl; }
}

.magnifying-glass {
  margin: 0 $gap;
  display: flex;
  flex-direction: column;
  justify-content: center;

  path { fill: $B10; }
  line { stroke: $B10; }

  &[disabled] {
    path { fill: $GR40; }
    line { stroke: $GR40; }
  }
}

.exclamation {
  margin: 0 $gap;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;

  &.narrow{
    margin: 0;
  }

  > svg {
    color: $paletteR1;
    width: 18px;
    height: 18px;
  }
}

.help {
  margin: 0 $gap;
  color: $B20;
  display: flex;
}

@include withRTL() {
  .help,
  .amaterial-help {
    transform: scaleX(-1);
  }
}

.amaterial-help {
  margin: 0 $gap;
  color: $B20;
  display: flex;
}

.clear-button {
  line-height: 0;
  background: $B50;
  border-radius: 12px;
}

.unit {
  padding: 0 $gap;
  color: $paletteD3;
  @include FontRoman();
  //needs display:block to fix inputs with prefix in ie11
  //https://github.com/wix/wix-style-react/issues/1691
  display: block;
}

.menu-arrow {
  display: flex;
  align-items: center;
  height: 100%;
  padding: 0 $double-gap;
  margin-top: 1px;
  path { fill: $B10; }

  &[disabled] {
    path { fill: $GR40; }
    line { stroke: $GR40; }
  }
}

.roundInput .menu-arrow {
  padding: 0 $double-gap;
}

.materialTitle {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;

  @include Text($weight: thin, $size: medium, $secondary: true);

}

.loaderContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 $gap;
}
